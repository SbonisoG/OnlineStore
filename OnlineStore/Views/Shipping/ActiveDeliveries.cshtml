@model IEnumerable<OnlineStore.Models.Shipping>
@using OnlineStore.Models
@{
	ViewBag.Title = "ActiveDeliveries";
}

<style>
	.content-body {
		width: 100%;
		height: 100%;
		display: flex;
		flex-wrap: wrap;
		overflow-y: scroll;
	}

	.card {
		min-width: 200px;
		min-height: 200px;
		flex: 1 1 20%;
		border: 1px solid white;
		background: white;
		font-size: 12px;
		color: #3e3c3c;
		margin: 10px 10px;
		box-shadow: 0px 0px 0px 0 rgba(0, 0, 0, 0.2), 0 0px 8px 0 rgba(0, 0, 0, 0.19);
		transition: box-shadow 0.3s ease;
	}

		.card:hover {
			box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 10px 0 rgba(0, 0, 0, 0.19);
		}

	.card-details {
		margin: 5px 15px;
		padding: 5px;
	}

	.card-title {
		font-size: 16px;
		color: #3e3c3c;
		padding-left: 0px;
		list-style: none;
		margin-left: 1em;
		text-indent: -1em;
	}

	.card-description {
		font-size: 14px;
		list-style: none;
		padding-left: 0;
		color: #767676;
	}

	.black-color {
		margin: 10px 0px;
		font-size: 14px;
		list-style: none;
		padding-left: 15px;
	}

	.card-description-order-list {
		padding-left: 10px;
		padding-right: 5px;
		margin-top: 5px;
		line-height: 1.5;
		font-size: 14px;
	}

	.card-title li:before {
		background-color: #14ccbb;
		border-radius: 50%;
		content: "";
		display: inline-block;
		margin-right: 10px;
		margin-bottom: 2px;
		height: 5px;
		width: 5px;
	}

	.dark-orange li:before {
		background-color: darkorange;
	}
</style>
<h2>ActiveDeliveries</h2>
<div id="content-section" class="content-body">
	@foreach (var order in Model)
	{

		<!-- --1-- -->
		<div class="card ">
			<div class="card-details">
				<p> @order.setToDeliveredOn.Value.ToString("d MMMM yyyy")</p>
				<ul class="card-title dark-orange">
					<li>@order.Order.Address</li>
				</ul>
				<p class="card-description">Shipping Id : @order.ShppngId</p>
				<p class="card-description">Customer Name : @(order.Order.FistName + " " + order.Order.LastName)</p>
				<p class="card-description">Contact No : @order.Order.ContactNo</p>
				<p class="card-description">No Items : @order.Order.ItemQty</p>
				@if (User.IsInRole("Assistant"))
				{
					<p class="card-description text-bg-secondary" >@order.ShippingStatus</p>

				}
				else
				{
					if (order.ShippingStatus == "Ready For Delivery")
					{
						<p class="card-description">
							<a href="@Url.Action("OnTheWay","Shipping", new { id = order.ShppngId})" class="btn btn-success"> Start Delivery</a>
						</p>
					}
					else if (order.ShippingStatus == "On The Way")
					{
						<p class="card-description">
							<a href="@Url.Action("Arrived","Shipping", new { id = order.ShppngId})" class="btn btn-success">Arrived</a>
						</p>
					}
					else if (order.ShippingStatus == "Arrived")
					{
						<p class="card-description"> ShippingCode : @order.ShippingCode</p>
						<div style=" display: flex; flex-wrap: wrap; justify-content:space-between">
							<p class="card-description">
								<a href="@Url.Action("Delivered","Shipping", new { id = order.ShppngId})" class="btn btn-success">Delivered</a>
							</p>

							<p class="card-description">
								<a href="@Url.Action("Cancel","Shipping", new { id = order.ShppngId})" class="btn btn-danger">Cancel</a>
							</p>
						</div>
					}
					else
					{
						<p class="card-description">@order.ShippingStatus</p>
					}
				}
			</div>
		</div>
	}
</div>